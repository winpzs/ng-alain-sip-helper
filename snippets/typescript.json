{
    "sip-getset": {
        "prefix": "sip-getset",
        "body": [
            "private _${value}:${any};",
            "public get ${value}():${any}{",
            "\treturn this._${value};",
            "}",
            "public set ${value}(p:${any}){",
            "\tthis._${value} = p;",
            "}$0"
        ],
        "description": "getset"
    },
    "sip-lambda": {
        "prefix": "sip-lambda",
        "body": [
            "(${p})=>{$0}"
        ],
        "description": "lambda"
    },
    "sip-list-page": {
        "prefix": "sip-list-page",
        "body": [
            "import { Component, ViewChild } from '@angular/core';",
            "",
            "import { Observable } from 'rxjs/Observable';",
            "import { SipRestService, SipSqlRet } from '@core/sip/services/sip-rest.service';",
            "import { MinitableComponent, MiniTableRow, MiniTableFilterEvent } from '@shared/sip/components/minitable/minitable.component';",
            "import { MinicolumnComponent } from '@shared/sip/components/minitable/minicolumn.component';",
            "import { SipUiPage } from '@core/sip/extends/sip-ui';",
            "import { EventInit } from '@core/sip/extends/decorators';",
            "import { SipUiService } from '@core/sip/services/sip-ui.service';",
            "",
            "@Component({",
            "    selector: 'sip-demo-list',",
            "    templateUrl: './list.component.html'",
            "})",
            "export class ListComponent extends SipUiPage {",
            "$0",
            "    constructor(private _rest: SipRestService, private _ui: SipUiService) {",
            "        super();",
            "    }",
            "",
            "    //等效于ngOnInit, 但可以多次使用",
            "    @EventInit()",
            "    private _init() {",
            "",
            "    }",
            "",
            "    //#region table1",
            "",
            "    @ViewChild('table1') table1: MinitableComponent;",
            "",
            "    searchParams = { Content: '', RegionID: '', projectId: '', elStatus: 'active', tag: '', Status: '', \"Status2\": \"shutting-down,terminated\" };",
            "    refresh() {",
            "        this.table1.refresh();",
            "    }",
            "    search() {",
            "        this.table1.search();",
            "    }",
            "",
            "    onSort(cols: MinicolumnComponent[]) {",
            "        console.log('onSort', cols, this.table1.sortColumns);",
            "    }",
            "",
            "    onSelectChanged(rows: MiniTableRow[]) {",
            "        console.log('onSelectChanged', rows);",
            "    }",
            "",
            "    onLoaded(rest: Observable<SipSqlRet>) {",
            "        //这里可以改造数据",
            "        //rest.map(item=>item)",
            "        console.log('onLoaded', rest);",
            "    }",
            "",
            "    onCompleted() {",
            "        console.log('onCompleted');",
            "    }",
            "",
            "    //#region filter",
            "",
            "    statusFilterItems = [{ text: '运行中', value: 'running' }, { text: '停机', value: 'stopped' }];",
            "    private statusFilter(event: MiniTableFilterEvent) {",
            "        let values = event.values;",
            "        if (values.length > 0) {",
            "            this.searchParams.elStatus = '';",
            "            this.searchParams.Status = values.join(',');",
            "        } else {",
            "            this.searchParams.elStatus = 'active';",
            "            this.searchParams.Status = values.join(',');",
            "        }",
            "        this.table1.search();",
            "    }",
            "    onFilter(event: MiniTableFilterEvent) {",
            "        switch (event.column.name) {",
            "            case 'Status':",
            "                this.statusFilter(event);",
            "                break;",
            "        }",
            "    }",
            "    //#endregion filter",
            "",
            "    //#endregion table1",
            "",
            "    //#region helper",
            "",
            "    ctxTest() {",
            "        let row = this.table1.selectFristRow;",
            "        console.log('ctxTest', row, row && row.data);",
            "    }",
            "",
            "    add() {",
            "        this.\\$open('/ui-demo/list/instance-create').params({ page: 1 }).receive(r => {",
            "            console.log('receive', r);",
            "            this.table1.refresh();",
            "        });",
            "    }",
            "",
            "    //#endregion helper",
            "",
            "}",
            ""
        ],
        "description": "list-page"
    },
    "sip-detail-page": {
        "prefix": "sip-detail-page",
        "body": [
            "import { Component } from '@angular/core';",
            "",
            "import { EventInit } from '@core/sip/extends/decorators';",
            "import { SipUiPage } from '@core/sip/extends/sip-ui';",
            "import { SipRestService } from '@core/sip/services/sip-rest.service';",
            "import { SipUiService } from '@core/sip/services/sip-ui.service';",
            "",
            "@Component({",
            "\tselector: 'sip-detail',",
            "\ttemplateUrl: './detail.component.html'",
            "})",
            "export class DetailComponent extends SipUiPage {",
            "$0",
            "\tconstructor(private _rest:SipRestService, private _ui:SipUiService) {",
            "\t\tsuper();",
            "\t}",
            "",
            "\tparams = { id: '' };",
            "",
            "\t//等效于ngOnInit, 但可以多次使用",
            "\t@EventInit()",
            "\tprivate _init() {",
            "\t\tthis.params = this.\\$params(this.params);",
            "\t}",
            "",
            "\tnzdata = [",
            "\t\t{",
            "\t\t\tname: \"管理员网络\",",
            "\t\t\tmac: \"D0:0D:81:52:0D:9D\",",
            "\t\t\tip: \"10.202.131.39\",",
            "\t\t\tsip: \"10.202.131.28\"",
            "\t\t},",
            "\t\t{",
            "\t\t\tname: \"管理员网络01\",",
            "\t\t\tmac: \"D0:0D:81:52:0D:8D\",",
            "\t\t\tip: \"10.202.131.45\",",
            "\t\t\tsip: \"10.202.131.131\"",
            "\t\t}",
            "\t];",
            "",
            "\tinboxdata = [",
            "\t\t{",
            "\t\t\tname: \"ceshivolume(vol-CF7C7F54)\",",
            "\t\t\ttype: \"数据盘\",",
            "\t\t\tinbox: \"云存储\",",
            "\t\t\tstatus: \"success\",",
            "\t\t\tstatusname: \"使用中\",",
            "\t\t\tsize: \"1G\"",
            "\t\t},",
            "\t\t{",
            "\t\t\tname: \"ceshivolume(vol-CF7C7F54)\",",
            "\t\t\ttype: \"数据盘\",",
            "\t\t\tinbox: \"云存储\",",
            "\t\t\tstatus: \"success\",",
            "\t\t\tstatusname: \"使用中\",",
            "\t\t\tsize: \"1G\"",
            "\t\t},",
            "\t\t{",
            "\t\t\tname: \"ceshivolume(vol-CF7C7F54)\",",
            "\t\t\ttype: \"数据盘\",",
            "\t\t\tinbox: \"云存储\",",
            "\t\t\tstatus: \"success\",",
            "\t\t\tstatusname: \"使用中\",",
            "\t\t\tsize: \"1G\"",
            "\t\t}",
            "\t];",
            "",
            "}",
            "",
            ""
        ],
        "description": "detail-page"
    },
    "sip-page": {
        "prefix": "sip-page",
        "body": [
            "import { Component } from '@angular/core';",
            "",
            "import { EventInit } from '@core/sip/extends/decorators';",
            "import { SipUiPage } from '@core/sip/extends/sip-ui';",
            "import { SipRestService } from '@core/sip/services/sip-rest.service';",
            "import { SipUiService } from '@core/sip/services/sip-ui.service';",
            "",
            "@Component({",
            "\tselector: 'sip-${page}',",
            "\ttemplateUrl: './${page}.component.html'",
            "})",
            "export class $0${page}Component extends SipUiPage {",
            "",
            "\tconstructor(private _rest:SipRestService, private _ui:SipUiService) {",
            "\t\tsuper();",
            "\t}",
            "",
            "\tparams = { id: '' };",
            "",
            "\t//等效于ngOnInit, 但可以多次使用",
            "\t@EventInit()",
            "\tprivate _init() {",
            "\t\tthis.params = this.\\$params(this.params);",
            "\t}",
            "",
            "}",
            ""
        ],
        "description": "page"
    },
    "sip-modal": {
        "prefix": "sip-modal",
        "body": [
            "import { Component } from '@angular/core';",
            "",
            "import { SipUiModal } from '@core/sip/extends/sip-ui';",
            "import { EventInit } from '@core/sip/extends/decorators';",
            "import { SipRestService } from '@core/sip/services/sip-rest.service';",
            "import { SipUiService } from '@core/sip/services/sip-ui.service';",
            "",
            "@Component({",
            "  selector: 'sip-test-modal',",
            "  templateUrl: './test-modal.component.html'",
            "})",
            "export class TestModalComponent extends SipUiModal {",
            "$0",
            "  constructor(private _rest: SipRestService, private _ui: SipUiService) {",
            "    super();",
            "  }",
            "",
            "\tparams = { id: '' };",
            "",
            "\t//等效于ngOnInit, 但可以多次使用",
            "\t@EventInit()",
            "\tprivate _init() {",
            "\t\tthis.params = this.\\$params(this.params);",
            "\t}",
            "",
            "  save(event) {",
            "    this.\\$close(true);",
            "  }",
            "",
            "}",
            ""
        ],
        "description": "modal"
    },
    "sip-contentchild": {
        "prefix": "sip-contentchild",
        "body": [
            "@ContentChild(${Component}) ${component1}:${Component};$0"
        ],
        "description": "@ContentChild(${Component}) ${component1}:${Component};"
    },
    "sip-contentchild-tmplref": {
        "prefix": "sip-contentchild-tmplref",
        "body": [
            "@ContentChild('${id}') ${name}: TemplateRef<any>;$0"
        ],
        "description": "@ContentChild('${id}') ${name}: TemplateRef<any>;"
    },
    "sip-viewchild": {
        "prefix": "sip-viewchild",
        "body": [
            "@ViewChild(${Component}) ${component1}:${Component};$0"
        ],
        "description": "@ViewChild(${Component}) ${component1}:${Component};"
    },
    "sip-viewchild-tmplref": {
        "prefix": "sip-viewchild-tmplref",
        "body": [
            "@ViewChild('${id}') ${name}: TemplateRef<any>;$0"
        ],
        "description": "@ViewChild('${id}') ${name}: TemplateRef<any>;"
    }
}